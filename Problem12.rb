# Euler Problem 12: The sequence of triangle numbers is generated by adding the natural numbers. 
# So the 7th triangle number
# would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# What is the value of the first triangle number to have over five hundred divisors?
triangle = 0
step = 1
factorCount = 0

while factorCount < 500 
	triangle += step
	limit = Math.sqrt(triangle)
	# would be much faster with a list of primes
	factorCount = ((1..limit).select{|x| triangle % x == 0 }).size * 2
	factorCount -= 1 if Math.sqrt(triangle) == limit.round # account for perfect sqr
	step = step+1
	puts triangle.to_s + ' - ' + factorCount.to_s
end
puts triangle